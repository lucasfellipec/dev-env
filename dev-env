#!/usr/bin/env bash

dry_run="0"
tsoding="0"

if [ -z "$DEV_ENV_HOME" ]; then
    echo "env var $DEV_ENV_HOME needs to be present"
    exit 1
fi

if [[ $1 == "--dry" ]]; then
    dry_run="1"
elif [[ $1 == "--tsoding" ]]; then
    tsoding="1"
fi

log() {
    if [[ $dry_run == "1" ]]; then
        echo "[DRY_RUN]: $1"
    else
        echo "$1"
    fi
}

log "env: $script_dir"

update_files() {
    log "copying over files from: $1"
    pushd $1 &> /dev/null
    (
        configs=`find . -mindepth 1 -maxdepth 1 -type d`
        for c in $configs; do
            directory=${2%/}/${c#./}
            if [[ $(uname) == "Linux" ]]; then
                if echo "$directory" | grep -E "homebrew|yabai|skhd|fish"; then
                    echo "    directories: $directory"
                    continue
                fi
            fi
            log "    removing: rm -rf $directory"

            if [[ $dry_run == "0" ]]; then
                rm -rf $directory
            fi

            log "    copying env: cp $c $2"
            if [[ $dry_run == "0" ]]; then
                cp -r ./$c $2
            fi
        done

    )
    popd &> /dev/null
}

copy() {
    log "removing: $2"
    if [[ $dry_run == "0" ]]; then
        rm $2
    fi
    log "copying: $1 to $2"
    if [[ $dry_run == "0" ]]; then
        cp $1 $2
    fi
}

set_theme() {
    local fish_prompt_path="$DEV_ENV_HOME/env/.config/fish/functions/fish_prompt.fish"
    local tsoding_template_path="$DEV_ENV_HOME/templates/tsoding/fish/fish_prompt.fish"
    local default_template_path="$DEV_ENV_HOME/templates/default/fish/fish_prompt.fish"
    if [[ $tsoding == "1" ]]; then
        cp "$tsoding_template_path" "$fish_prompt_path"
    else
        cp "$default_template_path" "$fish_prompt_path"
    fi
}

set_ghostty_config() {
    local ghostty_config_path="$DEV_ENV_HOME/env/.config/ghostty/config"
    local tsoding_ghostty_config_path="$DEV_ENV_HOME/templates/tsoding/ghostty/config"
    local default_ghostty_config_path="$DEV_ENV_HOME/templates/default/ghostty/config"
    if [[ $tsoding == "1" ]]; then
        cp "$tsoding_ghostty_config_path" "$ghostty_config_path"
    else
        cp "$default_ghostty_config_path" "$ghostty_config_path"
    fi
}

set_theme
set_ghostty_config

update_files $DEV_ENV_HOME/env/.config $XDG_CONFIG_HOME
update_files $DEV_ENV_HOME/env/.local $HOME/.local

copy $DEV_ENV_HOME/tmux-sessionizer/tmux-sessionizer $HOME/.local/bin/tmux-sessionizer
copy $DEV_ENV_HOME/env/.config/tmux/.tmux.conf $HOME/.tmux.conf
copy $DEV_ENV_HOME/tmux-sessionizer/tmux-cht $HOME/.local/bin/tmux-cht
copy $DEV_ENV_HOME/env/.tmux-sessionizer $HOME/.tmux-sessionizer
copy $DEV_ENV_HOME/env/.gitconfig $HOME/.gitconfig
copy $DEV_ENV_HOME/env/.vimrc $HOME/.vimrc
copy $DEV_ENV_HOME/env/.wezterm.lua $HOME/.wezterm.lua
copy $DEV_ENV_HOME/dev-env $HOME/.local/bin/dev-env
